{
  "Name": "Owin",
  "Version": "1.0.0",
  "Packages": [
    {
      "Name": "Owin",
      "Type": "Nuget"
    }
  ],
  "Recommendations": [
    {
      "Type": "Class",
      "Name": "IAppBuilder",
      "Value": "Owin.IAppBuilder",
      "KeyType": "Identifier",
      "ContainingType": "",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace IAppBuilder with IApplicationBuilder and add the Microsoft.AspNetCore.Builder namespace and the Microsoft.AspNetCore.Diagnostics package and remove the Owin namespace.",
          "Actions": [
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.Diagnostics",
              "Description": "Add package Microsoft.AspNetCore.Diagnostics"
            },
            {
              "Name": "ReplaceIdentifier",
              "Type": "Identifier",
              "Value": "IApplicationBuilder",
              "Description": "Replace IAppBuilder with IApplicationBuilder",
              "ActionValidation": {
                "Contains": "IApplicationBuilder",
                "NotContains": "IAppBuilder"
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Builder",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Builder;"
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.Builder",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Owin",
              "Description": "Remove Owin namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Owin;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Owin"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.Use(object, params object[])",
      "Value": "Owin.IAppBuilder.Use(object, params object[])",
      "KeyType": "Name",
      "ContainingType": "IAppBuilder",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace Owin.IAppBuilder.Use(object, params object[]) with .UseOwin.",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "Use",
                "newMethod": "UseOwin",
                "newParameters": "(pipeline => { pipeline(next => Invoke); })"
              },
              "VbValue": {
                "oldMethod": "Use",
                "newMethod": "UseOwin",
                "newParameters": "()"
              },
              "Description": "Replace Use(object, params object[]) with UseOwin",
              "ActionValidation": {
                "Contains": "UseOwin",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Invoke being the function you wanted to call in your lambda function.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Add lambda function as UseOwin method parameter",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to migrate Owin.IAppBuilder.Use(object, params object[]) to UseOwin.",
              "ActionValidation": {
                "Contains": "Invoke being the function you wanted to call in your lambda function.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Add lambda function as UseOwin method parameter",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.Use<T>(params object[])",
      "Value": "Owin.IAppBuilder.Use<T>(params object[])",
      "KeyType": "Name",
      "ContainingType": "AppBuilderUseExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace Owin.IAppBuilder.Use<T>(params object[]) with .UseMiddleware<MiddlewareNameHere>.",
          "Actions": [
            {
              "Name": "ReplaceMethodOnly",
              "Type": "Method",
              "Value": {
                "oldMethod": "Use",
                "newMethod": "UseMiddleware"
              },
              "Description": "Replace Owin.IAppBuilder.Use<T>(params object[]) with UseMiddleware",
              "ActionValidation": {
                "Contains": "UseMiddleware",
                "NotContains": ""
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseWebApi(System.Web.Http.HttpConfiguration)",
      "Value": "Owin.IAppBuilder.UseWebApi(System.Web.Http.HttpConfiguration)",
      "KeyType": "Name",
      "ContainingType": "WebApiAppBuilderExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace UseWebApi with UseEndpoints and add a comment to create a configure services method. Add Microsoft.AspNetCore.Builder, Microsoft.Extensions.DependencyInjection namespaces and remove System.Web.Http namespace.",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseWebApi",
                "newMethod": "UseEndpoints",
                "newParameters": "(endpoints => { endpoints.MapControllers(); })"
              },
              "VbValue": {
                "oldMethod": "UseWebApi",
                "newMethod": "UseEndpoints",
                "newParameters": "()"
              },
              "Description": "Replace UseWebApi with UseEndpoints",
              "ActionValidation": {
                "Contains": "UseEndpoints",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddControllers(); }",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add a new ConfigureServices method: ConfigureServices(IServiceCollection services). Add lambda function as UseEndPoints parameter: Function (endpoints) endpoints.MapControllers() End Function",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment on adding a new configureservices method.",
              "ActionValidation": {
                "Contains": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddControllers(); }",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add a new ConfigureServices method: ConfigureServices(IServiceCollection services). Add lambda function as UseEndPoints parameter: Function (endpoints) endpoints.MapControllers() End Function",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Builder",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Builder;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.Builder",
                "NotContains": ""
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.Extensions.DependencyInjection",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.Extensions.DependencyInjection;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.Extensions.DependencyInjection",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "System.Web.Http",
              "Description": "Remove System.Web.Http namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using System.Web.Http;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports System.Web.Http"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.MapSignalR()",
      "Value": "Owin.IAppBuilder.MapSignalR()",
      "KeyType": "Name",
      "ContainingType": "OwinExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Add Microsoft.AspNetCore.SignalR package and replace MapSignalR with UseEndpoints. Add a comment to add a configure services method. Add Microsoft.AspNetCore.Builder, Microsoft.Extensions.DependencyInjection namespaces.",
          "Actions": [
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.SignalR",
              "Description": "Add package Microsoft.AspNetCore.SignalR"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Builder",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Builder;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.Builder",
                "NotContains": ""
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.Extensions.DependencyInjection",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.Extensions.DependencyInjection;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.Extensions.DependencyInjection",
                "NotContains": ""
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.SignalR",
              "Description": "Add Microsoft.AspNetCore.SignalR namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.SignalR;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.SignalR",
                "NotContains": ""
              }
            },
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "MapSignalR",
                "newMethod": "UseEndpoints",
                "newParameters": "(routes => routes.MapHub<Hub>(\"pattern\"))"
              },
              "VbValue": {
                "oldMethod": "MapSignalR",
                "newMethod": "UseEndpoints",
                "newParameters": "()"
              },
              "Description": "Replace MapSignalR with UseEndpoints",
              "ActionValidation": {
                "Contains": "UseEndpoints",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddSignalR(); }",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add a new ConfigureServices method: ConfigureServices(IServiceCollection services). Add parameter to UseEndpoints method: Function(routes) routes.MapHub(Of Hub)(\"pattern\") End Function",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment on adding a new configureservices method.",
              "ActionValidation": {
                "Contains": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddSignalR(); }",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add a new ConfigureServices method: ConfigureServices(IServiceCollection services)",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseErrorPage()",
      "Value": "Owin.IAppBuilder.UseErrorPage()",
      "KeyType": "Name",
      "ContainingType": "ErrorPageExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace UseErrorPage with UseDeveloperExceptionPage.",
          "Actions": [
            {
              "Name": "ReplaceMethodOnly",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseErrorPage",
                "newMethod": "UseDeveloperExceptionPage"
              },
              "Description": "Replace UseErrorPage with UseDeveloperExceptionPage",
              "ActionValidation": {
                "Contains": "UseDeveloperExceptionPage",
                "NotContains": ""
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseDirectoryBrowser(Microsoft.Owin.StaticFiles.DirectoryBrowserOptions)",
      "Value": "Owin.IAppBuilder.UseDirectoryBrowser(Microsoft.Owin.StaticFiles.DirectoryBrowserOptions)",
      "KeyType": "Name",
      "ContainingType": "DirectoryBrowserExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Add Microsoft.Extensions.DependencyInjection namespace. Add a comment to add ConfigureServices method and explain how to use FileProvider attribute inside of DirectoryBrowsingOptions class.",
          "Actions": [
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.Extensions.DependencyInjection",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.Extensions.DependencyInjection;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.Extensions.DependencyInjection",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddDirectoryBrowser(); }",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add a new ConfigureServices method: ConfigureServices(IServiceCollection services)",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment on adding a new configureservices method.",
              "ActionValidation": {
                "Contains": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddDirectoryBrowser(); }",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add a new ConfigureServices method: ConfigureServices(IServiceCollection services)",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.CreatePerOwinContext<T>(System.Func<T>)",
      "Value": "Owin.IAppBuilder.CreatePerOwinContext<T>(System.Func<T>)",
      "KeyType": "Name",
      "ContainingType": "AppBuilderExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Add a comment to explain how to replace CreatePerOwinContext<T>(System.Func<T>) with a service in ConfigureServices method.",
          "Actions": [
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNet.Identity.Owin",
              "Description": "Remove Microsoft.AspNet.Identity.Owin namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.AspNet.Identity.Owin;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.AspNet.Identity.Owin"
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please replace CreatePerOwinContext<T>(System.Func<T>) and add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { Register your service here instead of using CreatePerOwinContext }. For example, app.CreatePerOwinContext(ApplicationDbContext.Create); would become: services.AddDbContext<ApplicationDbContext>(options => options.UseSqlServer(config.GetConnectionString(\"DefaultConnection\"))); ",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please replace CreatePerOwinContext(Of T)>(System.Func(Of T)) and add a new ConfigureServices method: ConfigureServices(IServiceCollection services). For example, app.CreatePerOwinContext(ApplicationDbContext.Create) would become: services.AddDbContext(Of ApplicationDbContext)(Function(options) options.UseSqlServer(config.GetConnectionString(\"DefaultConnection\")) EndFunction) ",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to replace CreatePerOwinContext<T>(System.Func<T>) with a service in ConfigureServices method.",
              "ActionValidation": {
                "Contains": "Please replace CreatePerOwinContext<T>(System.Func<T>) and add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { Register your service here instead of using CreatePerOwinContext }.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please replace CreatePerOwinContext(Of T)>(System.Func(Of T)) and add a new ConfigureServices method: ConfigureServices(IServiceCollection services).",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>)",
      "Value": "Owin.IAppBuilder.CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>)",
      "KeyType": "Name",
      "ContainingType": "AppBuilderExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Add a comment to explain how to replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>) with a service in ConfigureServices method.",
          "Actions": [
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNet.Identity.Owin",
              "Description": "Remove Microsoft.AspNet.Identity.Owin namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.AspNet.Identity.Owin;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.AspNet.Identity.Owin"
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>) and add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { Register your service here instead of using CreatePerOwinContext }. For example, app.CreatePerOwinContext(ApplicationDbContext.Create); would become: services.AddDbContext<ApplicationDbContext>(options => options.UseSqlServer(config.GetConnectionString(\"DefaultConnection\"))); ",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please replace CreatePerOwinContext(Of T)(System.Func(Of Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T), Microsoft.Owin.IOwinContext, T)) and add a new ConfigureServices method: ConfigureServices(IServiceCollection services). For example, app.CreatePerOwinContext(ApplicationDbContext.Create); would become: services.AddDbContext(Of ApplicationDbContext)(Function(options) options.UseSqlServer(config.GetConnectionString(\"DefaultConnection\")) EndFunction) ",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>) with a service in ConfigureServices method.",
              "ActionValidation": {
                "Contains": "Please replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>) and add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { Register your service here instead of using CreatePerOwinContext }.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please replace CreatePerOwinContext(Of T)(System.Func(Of Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T), Microsoft.Owin.IOwinContext, T)) and add a new ConfigureServices method: ConfigureServices(IServiceCollection services).",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>, System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, T>)",
      "Value": "Owin.IAppBuilder.CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>, System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, T>)",
      "KeyType": "Name",
      "ContainingType": "AppBuilderExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Add a comment to explain how to replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>, System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, T>) with a service in ConfigureServices method.",
          "Actions": [
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNet.Identity.Owin",
              "Description": "Remove Microsoft.AspNet.Identity.Owin namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.AspNet.Identity.Owin;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.AspNet.Identity.Owin"
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>, System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, T>) and add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { Register your service here instead of using CreatePerOwinContext }. For example, app.CreatePerOwinContext(ApplicationDbContext.Create); would become: services.AddDbContext<ApplicationDbContext>(options => options.UseSqlServer(config.GetConnectionString(\"DefaultConnection\"))); ",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please replace CreatePerOwinContext(Of T)(System.Func(Of Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T), Microsoft.Owin.IOwinContext, T), System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T), T)) and add a new ConfigureServices method: ConfigureServices(IServiceCollection services). For example, app.CreatePerOwinContext(ApplicationDbContext.Create); would become: services.AddDbContext(Of ApplicationDbContext)(Function(options) options.UseSqlServer(config.GetConnectionString(\"DefaultConnection\")) End Function)",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>, System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, T>) with a service in ConfigureServices method.",
              "ActionValidation": {
                "Contains": "Please replace CreatePerOwinContext<T>(System.Func<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, Microsoft.Owin.IOwinContext, T>, System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>, T>) and add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { Register your service here instead of using CreatePerOwinContext }.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please replace CreatePerOwinContext(Of T)(System.Func(Of Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T), Microsoft.Owin.IOwinContext, T), System.Action<Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T), T)) and add a new ConfigureServices method: ConfigureServices(IServiceCollection services).",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(string, string)",
      "Value": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(string, string)",
      "KeyType": "Name",
      "ContainingType": "OpenIdConnectAuthenticationExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "6.0.11"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.Owin.Security.OpenIdConnect"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "5.0.12"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.Owin.Security.OpenIdConnect"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "3.1.15"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect version 3.1.15"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(Microsoft.Owin.Security.OpenIdConnect.OpenIdConnectAuthenticationOptions)",
      "Value": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(Microsoft.Owin.Security.OpenIdConnect.OpenIdConnectAuthenticationOptions)",
      "KeyType": "Name",
      "ContainingType": "OpenIdConnectAuthenticationExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "6.0.11"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "5.0.12"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect() inside of your ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "3.1.15"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect version 3.1.15"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              },
              "VbActionValidation": {
                "Contains": "Imports Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.Owin.Security.OpenIdConnect"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseGoogleAuthentication(Microsoft.Owin.Security.Google.GoogleOAuth2AuthenticationOptions)",
      "Value": "Owin.IAppBuilder.UseGoogleAuthentication(Microsoft.Owin.Security.Google.GoogleOAuth2AuthenticationOptions)",
      "KeyType": "Name",
      "ContainingType": "GoogleAuthenticationExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net6.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net7.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            },
            {
              "Name": "net8.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "For .Net 6, add latest Microsoft.AspNetCore.Authentication.Google package version and add a comment to explain how to add google authentication.",
          "Actions": [
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle(options => { IConfigurationSection googleAuthNSection = Configuration.GetSection(\"Authentication:Google\"); options.ClientId = googleAuthNSection[\"ClientId\"]; options.ClientSecret = googleAuthNSection[\"ClientSecret\"]; } );",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle()",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add google authentication.",
              "ActionValidation": {
                "Contains": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle(options => { IConfigurationSection googleAuthNSection = Configuration.GetSection(\"Authentication:Google\"); options.ClientId = googleAuthNSection[\"ClientId\"]; options.ClientSecret = googleAuthNSection[\"ClientSecret\"]; } );",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle()",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.Authentication.Google",
              "Description": "Add package Microsoft.AspNetCore.Authentication.Google"
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.Google",
              "Description": "Remove Microsoft.Owin.Security.Google",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.Google;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.Owin.Security.Google"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net5.0",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "For .Net 5, add Microsoft.AspNetCore.Authentication.Google package version 5.0.12 and add a comment to explain how to add google authentication.",
          "Actions": [
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle(options => { IConfigurationSection googleAuthNSection = Configuration.GetSection(\"Authentication:Google\"); options.ClientId = googleAuthNSection[\"ClientId\"]; options.ClientSecret = googleAuthNSection[\"ClientSecret\"]; } );",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle()",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add google authentication.",
              "ActionValidation": {
                "Contains": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle(options => { IConfigurationSection googleAuthNSection = Configuration.GetSection(\"Authentication:Google\"); options.ClientId = googleAuthNSection[\"ClientId\"]; options.ClientSecret = googleAuthNSection[\"ClientSecret\"]; } );",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle()",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.Google",
                "Value": "5.0.12"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.Google"
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.Google",
              "Description": "Remove Microsoft.Owin.Security.Google",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.Google;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.Owin.Security.Google"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [
                "x86",
                "x64",
                "ARM32",
                "ARM64"
              ]
            }
          ],
          "Description": "For .Net Core add Microsoft.AspNetCore.Authentication.Google package version 3.1.18 and add a comment to explain how to add google authentication.",
          "Actions": [
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": {
                "comment": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle(options => { IConfigurationSection googleAuthNSection = Configuration.GetSection(\"Authentication:Google\"); options.ClientId = googleAuthNSection[\"ClientId\"]; options.ClientSecret = googleAuthNSection[\"ClientSecret\"]; } );",
                "dontUseCTAPrefix": ""
              },
              "VbValue": {
                "comment": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle()",
                "dontUseCTAPrefix": ""
              },
              "Description": "Add a comment to explain how to add google authentication.",
              "ActionValidation": {
                "Contains": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle(options => { IConfigurationSection googleAuthNSection = Configuration.GetSection(\"Authentication:Google\"); options.ClientId = googleAuthNSection[\"ClientId\"]; options.ClientSecret = googleAuthNSection[\"ClientSecret\"]; } );",
                "NotContains": "",
                "CheckComments": "True"
              },
              "VbActionValidation": {
                "Contains": "Please add IApplicationBuilder.UseAuthentication() in your configure method. Within your public void ConfigureServices(IServiceCollection services) method please add services.AddAuthentication().AddGoogle()",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.Google",
                "Version": "3.1.18"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.Google version 3.1.18"
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.Google",
              "Description": "Remove Microsoft.Owin.Security.Google",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.Google;"
              },
              "VbActionValidation": {
                "Contains": "",
                "NotContains": "Imports Microsoft.Owin.Security.Google"
              }
            }
          ]
        }
      ]
    }
  ]
}
{
  "Name": "Owin",
  "Version": "1.0.0",
  "Packages": [
    {
      "Name": "Owin",
      "Type": "Nuget"
    }
  ],
  "Recommendations": [
    {
      "Type": "Class",
      "Name": "IAppBuilder",
      "Value": "Owin.IAppBuilder",
      "KeyType": "Identifier",
      "ContainingType": "",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace IAppBuilder with IApplicationBuilder and add the Microsoft.AspNetCore.Builder namespace and the Microsoft.AspNetCore.Diagnostics package and remove the Owin namespace.",
          "Actions": [
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.Diagnostics",
              "Description": "Add package Microsoft.AspNetCore.Diagnostics"
            },
            {
              "Name": "ReplaceIdentifier",
              "Type": "Identifier",
              "Value": "IApplicationBuilder",
              "Description": "Replace IAppBuilder with IApplicationBuilder",
              "ActionValidation": {
                "Contains": "IApplicationBuilder",
                "NotContains": "IAppBuilder"
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Builder",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Builder;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Owin",
              "Description": "Remove Owin namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Owin;"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.Use(object, params object[])",
      "Value": "Owin.IAppBuilder.Use(object, params object[])",
      "KeyType": "Name",
      "ContainingType": "IAppBuilder",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Add a comment to help replace Owin.IAppBuilder.Use with .UseOwin.",
          "Actions": [
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Replace Owin.IAppBuilder.Use with .UseOwin(pipeline => { pipeline(next => Invoke); }) with Invoke being the function you wanted to call in your lambda function.",
              "Description": "Add a comment to explain how to migrate Owin.IAppBuilder.Use to UseOwin.",
              "ActionValidation": {
                "Contains": "Replace Owin.IAppBuilder.Use with .UseOwin(pipeline => { pipeline(next => Invoke); })",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.Use<T>(params object[])",
      "Value": "Owin.IAppBuilder.Use<T>(params object[])",
      "KeyType": "Name",
      "ContainingType": "AppBuilderUseExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Add a comment to help replace Owin.IAppBuilder.Use with either .UseMiddleware<MiddlewareNameHere> or .UseOwin.",
          "Actions": [
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "If this format is used \".Use<MiddlewareNameHere>\" replace with Microsoft.AspNetCore.Builder.IApplicationBuilder.UseMiddleware<MiddlewareNameHere> otherwise replace with .UseOwin(pipeline => { pipeline(next => Invoke); }) with Invoke being the function you wanted to call in your lambda function.",
              "Description": "Add a comment to explain how to migrate Owin.IAppBuilder.Use to either UseMiddleWare or UseOwin.",
              "ActionValidation": {
                "Contains": "replace with Microsoft.AspNetCore.Builder.IApplicationBuilder.UseMiddleware<MiddlewareNameHere> otherwise replace with .UseOwin",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.Use(System.Func<Microsoft.Owin.IOwinContext, System.Func<System.Threading.Tasks.Task>, System.Threading.Tasks.Task>)",
      "Value": "Owin.IAppBuilder.Use(System.Func<Microsoft.Owin.IOwinContext, System.Func<System.Threading.Tasks.Task>, System.Threading.Tasks.Task>)",
      "KeyType": "Name",
      "ContainingType": "AppBuilderUseExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Add a comment to help replace Owin.IAppBuilder.Use with .UseOwin.",
          "Actions": [
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Replace Owin.IAppBuilder.Use with .UseOwin(pipeline => { pipeline(next => Invoke); }) with Invoke being the function you wanted to call in your lambda function.",
              "Description": "Add a comment to explain how to migrate Owin.IAppBuilder.Use to UseOwin.",
              "ActionValidation": {
                "Contains": "Replace Owin.IAppBuilder.Use with .UseOwin(pipeline => { pipeline(next => Invoke); }) with Invoke",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseWebApi(System.Web.Http.HttpConfiguration)",
      "Value": "Owin.IAppBuilder.UseWebApi(System.Web.Http.HttpConfiguration)",
      "KeyType": "Name",
      "ContainingType": "WebApiAppBuilderExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace UseWebApi with UseEndpoints and add a comment to create a configure services method. Add Microsoft.AspNetCore.Builder, Microsoft.Extensions.DependencyInjection namespaces and remove System.Web.Http namespace.",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseWebApi",
                "newMethod": "UseEndpoints",
                "newParameters": "(endpoints => { endpoints.MapControllers(); })"
              },
              "Description": "Replace UseWebApi with UseEndpoints",
              "ActionValidation": {
                "Contains": "UseEndpoints",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddControllers(); }",
              "Description": "Add a comment on adding a new configureservices method.",
              "ActionValidation": {
                "Contains": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddControllers(); }",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Builder",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Builder;",
                "NotContains": ""
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.Extensions.DependencyInjection",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.Extensions.DependencyInjection;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "System.Web.Http",
              "Description": "Remove System.Web.Http namespace",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using System.Web.Http;"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.MapSignalR()",
      "Value": "Owin.IAppBuilder.MapSignalR()",
      "KeyType": "Name",
      "ContainingType": "OwinExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Add Microsoft.AspNetCore.SignalR package and replace MapSignalR with UseSignalR. Add a comment to add a configure services method. Add Microsoft.AspNetCore.Builder, Microsoft.Extensions.DependencyInjection namespaces.",
          "Actions": [
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.SignalR",
              "Description": "Add package Microsoft.AspNetCore.SignalR"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Builder",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Builder;",
                "NotContains": ""
              }
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.Extensions.DependencyInjection",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.Extensions.DependencyInjection;",
                "NotContains": ""
              }
            },
            {
              "Name": "ReplaceMethodOnly",
              "Type": "Method",
              "Value": {
                "oldMethod": "MapSignalR",
                "newMethod": "UseSignalR"
              },
              "Description": "Replace MapSignalR with UseSignalR",
              "ActionValidation": {
                "Contains": "UseSignalR",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddSignalR(); }",
              "Description": "Add a comment on adding a new configureservices method.",
              "ActionValidation": {
                "Contains": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddSignalR(); }",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please setup your signalR hub configuration here you can use a lambda function if needed such as .AddSignalR(routes => { routes.MapHub<StronglyTypedChatHub>(\"chathub\")); }",
              "Description": "Add a comment on how to setup your MVC controller in startup class.",
              "ActionValidation": {
                "Contains": "Please setup your signalR hub configuration here you can use a lambda function if needed such as .AddSignalR(routes => { routes.MapHub<StronglyTypedChatHub>",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseErrorPage()",
      "Value": "Owin.IAppBuilder.UseErrorPage()",
      "KeyType": "Name",
      "ContainingType": "ErrorPageExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace UseErrorPage with UseDeveloperExceptionPage.",
          "Actions": [
            {
              "Name": "ReplaceMethodOnly",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseErrorPage",
                "newMethod": "UseDeveloperExceptionPage"
              },
              "Description": "Replace UseErrorPage with UseDeveloperExceptionPage",
              "ActionValidation": {
                "Contains": "UseDeveloperExceptionPage",
                "NotContains": ""
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseDirectoryBrowser(Microsoft.Owin.StaticFiles.DirectoryBrowserOptions)",
      "Value": "Owin.IAppBuilder.UseDirectoryBrowser(Microsoft.Owin.StaticFiles.DirectoryBrowserOptions)",
      "KeyType": "Name",
      "ContainingType": "DirectoryBrowserExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            },
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Add Microsoft.Extensions.DependencyInjection namespace. Add a comment to add ConfigureServices method and explain how to use FileProvider attribute inside of DirectoryBrowsingOptions class.",
          "Actions": [
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.Extensions.DependencyInjection",
              "Description": "Add Microsoft.AspNetCore.Builder namespace",
              "ActionValidation": {
                "Contains": "using Microsoft.Extensions.DependencyInjection;",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddDirectoryBrowser(); }",
              "Description": "Add a comment on adding a new configureservices method.",
              "ActionValidation": {
                "Contains": "Please add a new ConfigureServices method: public void ConfigureServices(IServiceCollection services) { services.AddDirectoryBrowser(); }",
                "NotContains": "",
                "CheckComments": "True"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(string, string)",
      "Value": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(string, string)",
      "KeyType": "Name",
      "ContainingType": "OpenIdConnectAuthenticationExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "3.1.15"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect version 3.1.15"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        }
      ]
    },
    {
      "Type": "Method",
      "Name": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(Microsoft.Owin.Security.OpenIdConnect.OpenIdConnectAuthenticationOptions)",
      "Value": "Owin.IAppBuilder.UseOpenIdConnectAuthentication(Microsoft.Owin.Security.OpenIdConnect.OpenIdConnectAuthenticationOptions)",
      "KeyType": "Name",
      "ContainingType": "OpenIdConnectAuthenticationExtensions",
      "RecommendedActions": [
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "net5.0",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        },
        {
          "Source": "Amazon",
          "Preferred": "Yes",
          "TargetFrameworks": [
            {
              "Name": "netcoreapp3.1",
              "TargetCPU": [ "x86", "x64", "ARM32", "ARM64" ]
            }
          ],
          "Description": "Replace the UseOpenIdConnectAuthentication(string, string) with UseAuthentication and add a comment to explain how to add services.AddAuthentication().AddOpenIdConnect().",
          "Actions": [
            {
              "Name": "ReplaceMethodAndParameters",
              "Type": "Method",
              "Value": {
                "oldMethod": "UseOpenIdConnectAuthentication",
                "newMethod": "UseAuthentication",
                "newParameters": "()"
              },
              "Description": "Replace the OwinMiddleware Next variable with a newly declared one _next.",
              "ActionValidation": {
                "Contains": "UseAuthentication()",
                "NotContains": ""
              }
            },
            {
              "Name": "AddComment",
              "Type": "Method",
              "Value": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
              "Description": "Add a comment to explain how to add a reference to services.AddAuthentication().AddOpenIdConnect()",
              "ActionValidation": {
                "Contains": "Please add services.AddAuthentication().AddOpenIdConnect(); inside of your public void ConfigureServices(IServiceCollection services) method. You can also optionally add your OpenIdConnectOptions.",
                "NotContains": "",
                "CheckComments": "True"
              }
            },
            {
              "Name": "AddPackage",
              "Type": "Package",
              "Value": {
                "Name": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
                "Version": "3.1.15"
              },
              "Description": "Add package Microsoft.AspNetCore.Authentication.OpenIdConnect version 3.1.15"
            },
            {
              "Name": "AddDirective",
              "Type": "Using",
              "Value": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "Description": "Add Microsoft.AspNetCore.Authentication.OpenIdConnect",
              "ActionValidation": {
                "Contains": "using Microsoft.AspNetCore.Authentication.OpenIdConnect;",
                "NotContains": ""
              }
            },
            {
              "Name": "RemoveDirective",
              "Type": "Using",
              "Value": "Microsoft.Owin.Security.OpenIdConnect",
              "Description": "Remove Microsoft.Owin.Security.OpenIdConnect",
              "ActionValidation": {
                "Contains": "",
                "NotContains": "using Microsoft.Owin.Security.OpenIdConnect;"
              }
            }
          ]
        }
      ]
    }
  ]
}
